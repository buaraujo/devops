apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-server
  labels:
    app.bkraujo.io/name: redis
    app.bkraujo.io/instance: server
    app.bkraujo.io/part-of: <aplicacao>
spec:
  replicas: 3
  serviceName: redis-server-headless
  podManagementPolicy: "OrderedReady"

  updateStrategy:
    type: RollingUpdate
    
  selector:
    matchLabels:
      app.bkraujo.io/name: redis
      app.bkraujo.io/instance: server
      app.bkraujo.io/part-of: <aplicacao>
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ ReadWriteOnce ]
      storageClassName: resize-sc
      resources:
        requests:
          storage: 10Gi
  template:
    metadata:
      labels:
        app.bkraujo.io/name: redis
        app.bkraujo.io/instance: server
        app.bkraujo.io/part-of: <aplicacao>
    spec:
      # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      #                              AFFINITY
      # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cluster.bkraujo.io/name
                operator: In
                values:
                - "producao"
              - key: node.bkraujo.io/role
                operator: In
                values:
                - "worker"
              - key: node.bkraujo.io/instance
                operator: In
                values:
                - "c5"
                - "m5"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app.bkraujo.io/name"
                      operator: In
                      values:
                      - redis
                    - key: "app.bkraujo.io/instance"
                      operator: In
                      values:
                      - server
                    - key: "app.bkraujo.io/part-of"
                      operator: In
                      values:
                      - <aplicacao>
      # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      #                                VOLUMES
      # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      volumes:
      - name: redis-server-config
        emptyDir: {}
      - name: config
        configMap:
          name: redis-server-config
          optional: false
          defaultMode: 0644
      # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      #                             Init Containers
      # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      initContainers:
      - name: redis-server-initializer
        image: redis:6.0-alpine
        command: [ "sh", "-c" ]
        args:
          - |
            cp /mnt/conf.d/redis/redis.conf /etc/redis/redis.conf
            sed -i '/slaveof/d' /etc/redis/redis.conf

            echo "Consultando REDIS-SENTINEL para obter o MASTER"
            if [ "$(redis-cli -h redis-sentinel-headless.scm.svc.cluster.local -p 5000 ping 2>/dev/null)" == "PONG" ]; then
              MASTER="$(redis-cli -h redis-sentinel-headless.scm.svc.cluster.local -p 5000 sentinel get-master-addr-by-name redis-server | grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
              echo "REDIS-SENTINEL apontou ${MASTER} para MASTER"
              echo "slaveof ${MASTER} 6379" >> /etc/redis/redis.conf
            
            else
              echo "REDIS-SENTINEL não encontrado em redis-sentinel-headless.scm.svc.cluster.local:5000"

              if [ "$(hostname)" != "redis-server-0" ]; then
                echo "MASTER não encontrado. Utilizando redis-server-0.redis-server-headless.scm.svc.cluster.local"
                echo "slaveof redis-server-0.redis-server-headless.scm.svc.cluster.local 6379" >> /etc/redis/redis.conf
              else
                echo "Assumindo papel de MASTER"
              fi
            fi
        volumeMounts:
        - name: redis-server-config
          mountPath: /etc/redis/
        - name: config
          mountPath: /mnt/conf.d/redis/
      # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      #                            CONTAINERS
      # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      containers:
      - name: redis-server
        image: redis:6.0.9-alpine
        command: ["redis-server", "/etc/redis/redis.conf"]
        # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
        #                            Ports
        # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
        ports:
          - name: redis
            containerPort: 6379
          - name: gossip
            containerPort: 16379
        # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
        #                            Probes
        # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
        livenessProbe:
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 2
          tcpSocket:
            port: redis
        # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
        #                           Volume Mounts
        # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
        volumeMounts:
        - name: data
          mountPath: /data
        - name: redis-server-config
          mountPath: /etc/redis/